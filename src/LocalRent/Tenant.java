/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LocalRent;

import javax.swing.*;
import javax.swing.table.*;
import javax.swing.border.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author sk995
 */
public class Tenant extends JFrame {
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    /**
     * Creates new form Tenant
     */
    public Tenant() {
        initComponents();
        conn = RentDatabase.connectDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tenantPanel = new JPanel();
        backToHome = new JLabel();
        addPanel = new JPanel();
        addButton = new JButton();
        printInvoiceButton = new JButton();
        delete = new JButton();
        tenantIcon = new JLabel();
        showAllPanel = new JPanel();
        jScrollPane1 = new JScrollPane();
        jTable1 = new JTable();
        tenantClose = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        tenantPanel.setBackground(new Color(102, 102, 0));
        tenantPanel.setBorder(new SoftBevelBorder(BevelBorder.RAISED));

        backToHome.setFont(new Font("Comic Sans MS", 1, 14)); // NOI18N
        backToHome.setForeground(new Color(255, 0, 204));
        backToHome.setText("Local Rent");
        backToHome.setToolTipText("back to home");
        backToHome.setCursor(new Cursor(Cursor.HAND_CURSOR));
        backToHome.setIcon(new ImageIcon("image\\home-icon-silhouette.png"));
        backToHome.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                backToHomeMouseClicked(evt);
            }
        });

        addPanel.setBackground(new Color(255, 255, 255));

        addButton.setBackground(new Color(51, 255, 51));
        addButton.setFont(new Font("Comic Sans MS", 1, 15)); // NOI18N
        addButton.setForeground(new Color(255, 255, 255));
        addButton.setText("Add New");
        addButton.setToolTipText("add new tenant");
        addButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        addButton.setIcon(new ImageIcon("image\\plus.png"));
        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        printInvoiceButton.setBackground(new Color(204, 255, 255));
        printInvoiceButton.setFont(new Font("Comic Sans MS", 1, 15)); // NOI18N
        printInvoiceButton.setText("Print Invoice");
        printInvoiceButton.setToolTipText("print/download");
        printInvoiceButton.setBorderPainted(false);
        printInvoiceButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                printInvoiceButtonActionPerformed(evt);
            }
        });

        delete.setBackground(new Color(204, 0, 0));
        delete.setFont(new Font("Comic Sans MS", 1, 16)); // NOI18N
        delete.setForeground(new Color(255, 255, 255));
        delete.setText("Delete");
        delete.setToolTipText("delete tenant");
        delete.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        delete.setCursor(new Cursor(Cursor.HAND_CURSOR));
        delete.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        GroupLayout addPanelLayout = new GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addComponent(addButton)
                .addGap(18, 18, 18)
                .addComponent(printInvoiceButton)
                .addGap(16, 16, 16)
                .addComponent(delete, GroupLayout.PREFERRED_SIZE, 67, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGroup(addPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(delete, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE, false)
                        .addComponent(printInvoiceButton, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                        .addComponent(addButton, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tenantIcon.setFont(new Font("Comic Sans MS", 3, 24)); // NOI18N
        tenantIcon.setForeground(new Color(255, 255, 255));
        tenantIcon.setText("Tenants");
        tenantIcon.setIcon(new ImageIcon("image\\family.png"));

        showAllPanel.setBackground(new Color(255, 255, 255));

        jTable1.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Tenant Id", "Name", "Mobile", "Email", "Date Of Reistration", "Number Of Members", "Number Of Rooms", "Advance", "Payment Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Object.class, java.lang.Byte.class, java.lang.Byte.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        GroupLayout showAllPanelLayout = new GroupLayout(showAllPanel);
        showAllPanel.setLayout(showAllPanelLayout);
        showAllPanelLayout.setHorizontalGroup(
            showAllPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        showAllPanelLayout.setVerticalGroup(
            showAllPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 278, GroupLayout.PREFERRED_SIZE)
        );

        tenantClose.setBackground(new Color(255, 0, 0));
        tenantClose.setFont(new Font("Tahoma", 1, 18)); // NOI18N
        tenantClose.setForeground(new Color(255, 255, 255));
        tenantClose.setText("X");
        tenantClose.setToolTipText("close");
        tenantClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                tenantCloseActionPerformed(evt);
            }
        });

        GroupLayout tenantPanelLayout = new GroupLayout(tenantPanel);
        tenantPanel.setLayout(tenantPanelLayout);
        tenantPanelLayout.setHorizontalGroup(
            tenantPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(tenantPanelLayout.createSequentialGroup()
                .addComponent(backToHome)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 1023, Short.MAX_VALUE)
                .addComponent(tenantClose))
            .addGroup(GroupLayout.Alignment.TRAILING, tenantPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tenantPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(addPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showAllPanel, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.LEADING, tenantPanelLayout.createSequentialGroup()
                        .addComponent(tenantIcon)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tenantPanelLayout.setVerticalGroup(
            tenantPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(tenantPanelLayout.createSequentialGroup()
                .addGroup(tenantPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(backToHome)
                    .addComponent(tenantClose, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tenantIcon)
                .addGap(29, 29, 29)
                .addComponent(addPanel, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(showAllPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(tenantPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(tenantPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tenantCloseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_tenantCloseActionPerformed
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_tenantCloseActionPerformed

    private void backToHomeMouseClicked(MouseEvent evt) {//GEN-FIRST:event_backToHomeMouseClicked
        try{
            stmt = conn.createStatement();
            String sql1 = "Select sum(vacantRoom)from house" ;
            String sql = "Select Distinct(tenantId),outstandingAmount from tenant";
            Home hom =new Home();
            rs = stmt.executeQuery(sql);
            int sum =0;
            while(rs.next()){
                sum += rs.getInt("outstandingAmount");
            }
            hom.outstandingAmount.setText(Integer.toString(sum));
            rs = stmt.executeQuery(sql1);
            while(rs.next()) {
                hom.setVisible(true);
                hom.pack();
                hom.setLocationRelativeTo(null);
                hom.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                hom.vacantRooms.setText(Integer.toString(rs.getInt("sum(vacantRoom)")));
            }
            this.dispose();
        } catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }    // TODO add your handling code here:
    }//GEN-LAST:event_backToHomeMouseClicked

    private void addButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        Tregister treg=new Tregister();
        treg.setVisible(true);
        treg.pack();
        treg.setLocationRelativeTo(null);
        treg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
     
    }//GEN-LAST:event_addButtonActionPerformed

    private void printInvoiceButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_printInvoiceButtonActionPerformed
        Invoice inv=new Invoice();
        inv.setVisible(true);
        inv.pack();
        inv.setLocationRelativeTo(null);
        inv.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_printInvoiceButtonActionPerformed

    private void deleteActionPerformed(ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tenant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton addButton;
    private JPanel addPanel;
    private JLabel backToHome;
    private JButton delete;
    private JScrollPane jScrollPane1;
    public JTable jTable1;
    private JButton printInvoiceButton;
    private JPanel showAllPanel;
    private JButton tenantClose;
    private JLabel tenantIcon;
    private JPanel tenantPanel;
    // End of variables declaration//GEN-END:variables
}
