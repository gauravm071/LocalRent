/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LocalRent;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author sk995
 */
public class Room extends JFrame {
    Connection conn ;
    Statement stmt = null;
    ResultSet rs = null;

    /**
     * Creates new form Room
     */
    public Room() {
        initComponents();
        conn = RentDatabase.connectDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new JScrollPane();
        jTextArea1 = new JTextArea();
        jPanel1 = new JPanel();
        close = new JButton();
        backtohome = new JLabel();
        jLabel2 = new JLabel();
        searchText = new JTextField();
        searchIcon = new JLabel();
        jLabel1 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        houseId = new JTextField();
        occupiedRoom = new JTextField();
        vacantRoom = new JTextField();
        jScrollPane2 = new JScrollPane();
        address = new JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new Color(102, 0, 0));

        close.setBackground(new Color(255, 0, 0));
        close.setFont(new Font("Tahoma", 1, 18)); // NOI18N
        close.setForeground(new Color(255, 255, 255));
        close.setText("X");
        close.setToolTipText("close");
        close.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        backtohome.setFont(new Font("Comic Sans MS", 1, 18)); // NOI18N
        backtohome.setForeground(new Color(255, 255, 204));
        backtohome.setIcon(new ImageIcon("image\\home-icon-silhouette.png")); // NOI18N
        backtohome.setText("Local Rent");
        backtohome.setToolTipText("back to home");
        backtohome.setCursor(new Cursor(Cursor.HAND_CURSOR));
        backtohome.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                backtohomeMouseClicked(evt);
            }
        });

        jLabel2.setFont(new Font("Comic Sans MS", 1, 36)); // NOI18N
        jLabel2.setForeground(new Color(255, 204, 204));
        jLabel2.setIcon(new ImageIcon("image\\room-key.png")); // NOI18N
        jLabel2.setText("Room");

        searchText.setFont(new Font("Tahoma", 1, 16)); // NOI18N
        searchText.setToolTipText("enter house Id");
        searchIcon.setIcon(new ImageIcon("image\\search-magnifier-interface-symbol.png")); // NOI18N
        searchIcon.setToolTipText("search vacant rooms");
        searchIcon.setCursor(new Cursor(Cursor.HAND_CURSOR));
        searchIcon.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                searchIconMouseClicked(evt);
            }
        });

        jLabel1.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setText("House Id");

        jLabel3.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new Color(255, 255, 255));
        jLabel3.setText("Occupied Rooms");

        jLabel4.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new Color(255, 255, 255));
        jLabel4.setText("Vacant Rooms");

        jLabel5.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new Color(255, 255, 255));
        jLabel5.setText("Address");

        address.setColumns(20);
        address.setRows(5);
        jScrollPane2.setViewportView(address);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backtohome)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(close))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(searchText, GroupLayout.PREFERRED_SIZE, 361, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchIcon))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addComponent(houseId)
                                    .addGroup(GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                            .addComponent(occupiedRoom, GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                            .addComponent(vacantRoom))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(12, 12, 12)))))
                .addGap(0, 137, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(close, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(backtohome, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(searchText, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(searchIcon)))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(houseId, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(occupiedRoom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(vacantRoom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(0, 58, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeActionPerformed(ActionEvent evt) {
        this.dispose();//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeActionPerformed

    private void backtohomeMouseClicked(MouseEvent evt) {//GEN-FIRST:event_backToHomeMouseClicked
        try{
            stmt = conn.createStatement();
            String sql1 = "Select sum(vacantRoom)from house" ;
            String sql = "Select Distinct(tenantId),outstandingAmount from tenant";
            Home hom =new Home();
            rs = stmt.executeQuery(sql);
            int sum =0;
            while(rs.next()){
                sum += rs.getInt("outstandingAmount");
            }
            hom.outstandingAmount.setText(Integer.toString(sum));
            rs = stmt.executeQuery(sql1);
            while(rs.next()) {
                hom.setVisible(true);
                hom.pack();
                hom.setLocationRelativeTo(null);
                hom.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                hom.vacantRooms.setText(Integer.toString(rs.getInt("sum(vacantRoom)")));
            }
            this.dispose();
        } catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }


    private void searchIconMouseClicked(MouseEvent evt) {
    try {
        stmt = conn.createStatement();
        String sql = "Select houseId,occupiedRoom,vacantRoom,address from house where houseId = '" +searchText.getText()+"'";
        rs = stmt.executeQuery(sql);
        if(rs.next()){
                houseId.setText(rs.getString("houseId"));
                occupiedRoom.setText(rs.getString("occupiedRoom"));
                vacantRoom.setText(rs.getString("vacantRoom"));
                address.setText(rs.getString("address"));
            }
        else
            JOptionPane.showMessageDialog(null, "House Id entered is absent/Wrong");
    }
        catch(HeadlessException | SQLException e){
        JOptionPane.showMessageDialog(null,e);
    }//GEN-FIRST:event_searchIconMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchIconMouseClicked
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Room().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextArea address;
    private JLabel backtohome;
    private JButton close;
    private JTextField houseId;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JPanel jPanel1;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JTextArea jTextArea1;
    private JTextField occupiedRoom;
    private JLabel searchIcon;
    private JTextField searchText;
    private JTextField vacantRoom;
    // End of variables declaration//GEN-END:variables
}
