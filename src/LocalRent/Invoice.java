/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LocalRent;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author sk995
 */
public class Invoice extends JFrame {
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    /**
     * Creates new form Invoice
     */
    public Invoice() {
        initComponents();
        conn = RentDatabase.connectDb();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        invoicePanel = new JPanel();
        backToHome = new JLabel();
        invoiceClose = new JButton();
        searchBar = new JTextField();
        searchIcon = new JLabel();
        invoiceIcon = new JLabel();
        printButton = new JButton();
        jLabel1 = new JLabel();
        jLabel4 = new JLabel();
        jLabel11 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        jLabel9 = new JLabel();
        jLabel10 = new JLabel();
        jTextField1 = new JTextField();
        jTextField2 = new JTextField();
        jTextField3 = new JTextField();
        jTextField4 = new JTextField();
        jTextField5 = new JTextField();
        jTextField6 = new JTextField();
        jTextField7 = new JTextField();
        jTextField8 = new JTextField();
        jTextField9 = new JTextField();
        jlabel0 = new JLabel();
        roomId = new JTextField();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        invoicePanel.setBackground(new Color(0, 255, 102));

        backToHome.setFont(new Font("Comic Sans MS", 1, 14)); // NOI18N
        backToHome.setForeground(new Color(153, 0, 153));
        backToHome.setText("Local Rent");
        backToHome.setToolTipText("back to home");
        backToHome.setCursor(new Cursor(Cursor.HAND_CURSOR));
        backToHome.setIcon(new ImageIcon("image\\home-icon-silhouette.png"));
        backToHome.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                backToHomeMouseClicked(evt);
            }
        });

        invoiceClose.setBackground(new Color(255, 0, 51));
        invoiceClose.setFont(new Font("Tahoma", 1, 18)); // NOI18N
        invoiceClose.setForeground(new Color(255, 255, 255));
        invoiceClose.setText("X");
        invoiceClose.setToolTipText("close");
        invoiceClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                invoiceCloseActionPerformed(evt);
            }
        });

        searchBar.setFont(new Font("Tahoma", 0, 14)); // NOI18N

        searchIcon.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        searchIcon.setText("Search");
        searchIcon.setToolTipText("search tenant");
        searchIcon.setCursor(new Cursor(Cursor.HAND_CURSOR));
        searchIcon.setIcon(new ImageIcon("image\\search-magnifier-interface-symbol.png"));
        searchIcon.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                searchIconMouseClicked(evt);
            }
        });


        invoiceIcon.setFont(new Font("Comic Sans MS", 1, 24)); // NOI18N
        invoiceIcon.setForeground(new Color(255, 255, 255));
        invoiceIcon.setText("Invoice");
        invoiceIcon.setIcon(new ImageIcon("image\\receipt1.png"));

        printButton.setBackground(new Color(204, 0, 204));
        printButton.setFont(new Font("Comic Sans MS", 1, 18)); // NOI18N
        printButton.setForeground(new Color(255, 255, 255));
        printButton.setText("Print");
        printButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        printButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Tenant Id");

        jLabel4.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Number of Months");

        jLabel11.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Number of Rooms");

        jLabel5.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Room Charge");

        jLabel6.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Electricity Bill");

        jLabel7.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Water Bill");

        jLabel8.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Total Amount");

        jLabel9.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Advance Payment");

        jLabel10.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Balance");

        jlabel0.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jlabel0.setText("Room Id");

        GroupLayout invoicePanelLayout = new GroupLayout(invoicePanel);
        invoicePanel.setLayout(invoicePanelLayout);
        invoicePanelLayout.setHorizontalGroup(
            invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(backToHome)
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(invoiceIcon)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(invoiceClose, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE))
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(invoicePanelLayout.createSequentialGroup()
                                .addComponent(searchBar, GroupLayout.PREFERRED_SIZE, 308, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchIcon))
                            .addGroup(invoicePanelLayout.createSequentialGroup()
                                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(invoicePanelLayout.createSequentialGroup()
                                            .addGap(55, 55, 55)
                                            .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel1)
                                                .addGroup(invoicePanelLayout.createSequentialGroup()
                                                    .addComponent(jLabel10)
                                                    .addGap(3, 3, 3))))
                                        .addComponent(jlabel0, GroupLayout.Alignment.TRAILING))
                                    .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel6))
                                    .addGroup(invoicePanelLayout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel5)))
                                    .addComponent(jLabel4))
                                .addGap(51, 51, 51)
                                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField4, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField5, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField6, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField7, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField9, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roomId, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(printButton)))
                .addGap(74, 74, Short.MAX_VALUE))
        );
        invoicePanelLayout.setVerticalGroup(
            invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(invoiceClose, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addComponent(backToHome)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invoiceIcon)
                        .addGap(18, 18, 18)
                        .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(searchBar, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchIcon, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTextField5, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(roomId, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlabel0))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(7, 7, 7)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField9, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField8, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(invoicePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(printButton)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(invoicePanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(invoicePanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backToHomeMouseClicked(MouseEvent evt) {
        try{
            stmt = conn.createStatement();
            String sql1 = "Select sum(vacantRoom)from house" ;
            String sql = "Select Distinct(tenantId),outstandingAmount from tenant";
            Home hom =new Home();
            rs = stmt.executeQuery(sql);
            int sum =0;
            while(rs.next()){
                sum += rs.getInt("outstandingAmount");
            }
            hom.outstandingAmount.setText(Integer.toString(sum));
            rs = stmt.executeQuery(sql1);
            while(rs.next()) {
                hom.setVisible(true);
                hom.pack();
                hom.setLocationRelativeTo(null);
                hom.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                hom.vacantRooms.setText(Integer.toString(rs.getInt("sum(vacantRoom)")));
            }
            this.dispose();
        } catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }                                       
    private void searchIconMouseClicked(MouseEvent evt) {
        try {
            stmt = conn.createStatement();
            String sql = "Select tenantId ,noOfMonths,noOfRooms, waterBill,roomCharge,ElectricityBill,totalAmount,advance from tenant where tenantId = '" +searchBar.getText()+"'";
            rs = stmt.executeQuery(sql);
            if(rs.next()){
                if(rs.getString("noOfMonths")==null)
                    JOptionPane.showMessageDialog(null, "No payment details available");
                else {
                    jTextField2.setText(rs.getString("noOfMonths"));
                    jTextField3.setText(rs.getString("noOfRooms"));
                    jTextField4.setText(rs.getString("roomCharge"));
                    jTextField5.setText(rs.getString("tenantId"));
                    jTextField6.setText(rs.getString("electricityBill"));
                    jTextField7.setText(rs.getString("waterBill"));
                    jTextField8.setText(rs.getString("advance"));
                    jTextField9.setText(rs.getString("totalAmount"));
                    int adv = Integer.parseInt(rs.getString("advance"));
                    int total = Integer.parseInt(rs.getString("totalAmount"));
                    jTextField1.setText(Integer.toString(total - adv));
                }

            }
            else
                JOptionPane.showMessageDialog(null, "Tenant data not available");
        }
        catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void printButtonActionPerformed(ActionEvent evt){

                String fileName = "";
                JFileChooser fileChoose = new JFileChooser();
                fileChoose.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
                int res = fileChoose.showSaveDialog(this);
                if(res == JFileChooser.APPROVE_OPTION){
                    fileName = fileChoose.getSelectedFile().getPath();
                }
        try {
                String balance = jTextField1.getText();
                String months = jTextField2.getText();
                String room = jTextField3.getText();
                String roomCharge= jTextField4.getText();
                String id = jTextField5.getText();
                String elec = jTextField6.getText();
                String water = jTextField7.getText();
                String advance = jTextField8.getText();
                String total = jTextField9.getText();
                Document doc = new Document();
                PdfWriter.getInstance(doc,new FileOutputStream(fileName+"/invoice.pdf"));
                doc.open();
                doc.addTitle("INVOICE");
                doc.addHeader("Invoice","");
                Paragraph para = new Paragraph("                                                             INVOICE\n\n                             Tenant Id                  " +
                        "                "+id+"\n                              Number Of Months                    "+months+"\n" +
                        "                              Number Of Rooms                    "+room+"\n                              Room Charge" +
                        "                        "+roomCharge+"\n                               Electricity Bill                          "+elec+"\n                              Water Bill                                 " +
                        ""+water+"\n                              Advance                                    " +
                        ""+advance+"\n                              Total Amount                         "+total+"\n                              Balance                                 "+balance);
                doc.add(para);
                doc.close();
                JOptionPane.showMessageDialog(null,"Invoice generated successfully");
        } catch (DocumentException|FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    private void invoiceCloseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_invoiceCloseActionPerformed
       this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_invoiceCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Invoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel backToHome;
    private JButton invoiceClose;
    private JLabel invoiceIcon;
    private JPanel invoicePanel;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JTextField jTextField1;
    private JTextField jTextField2;
    private JTextField jTextField3;
    private JTextField jTextField4;
    private JTextField jTextField5;
    private JTextField jTextField6;
    private JTextField jTextField7;
    private JTextField jTextField8;
    private JTextField jTextField9;
    private JLabel jlabel0;
    private JButton printButton;
    private JTextField roomId;
    private JTextField searchBar;
    private JLabel searchIcon;
    // End of variables declaration//GEN-END:variables
}
