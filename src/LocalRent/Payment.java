/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LocalRent;

import javax.swing.*;
import javax.swing.border.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Logger;
import java.time.*;

/**
 *
 * @author sk995
 */
public class Payment extends JFrame{
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;

    /**
     * Creates new form Payment
     */
    public Payment() {
        initComponents();
        conn = RentDatabase.connectDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paymentPanel = new JPanel();
        backToHome = new JLabel();
        paymentClose = new JButton();
        paymentIcon = new JLabel();
        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        jButton1 = new JButton();
        jLabel9 = new JLabel();
        tenantId = new JTextField();
        outstandingAmount = new JTextField();
        advance = new JTextField();
        noOfMonths = new JTextField();
        roomCharge = new JTextField();
        waterBill = new JTextField();
        totalAmount = new JTextField();
        electricityUnit = new JTextField();
        roomId = new JTextField();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        paymentPanel.setBackground(new Color(255, 204, 0));
        paymentPanel.setBorder(new SoftBevelBorder(BevelBorder.RAISED));

        backToHome.setFont(new Font("Comic Sans MS", 1, 15)); // NOI18N
        backToHome.setForeground(new Color(153, 0, 153));
        backToHome.setText("Local Rent");
        backToHome.setToolTipText("back to home");
        backToHome.setCursor(new Cursor(Cursor.HAND_CURSOR));
        backToHome.setIcon(new ImageIcon("image\\home-icon-silhouette.png"));
        backToHome.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                backToHomeMouseClicked(evt);
            }
        });

        paymentClose.setBackground(new Color(255, 0, 0));
        paymentClose.setFont(new Font("Tahoma", 1, 18)); // NOI18N
        paymentClose.setForeground(new Color(255, 255, 255));
        paymentClose.setText("X");
        paymentClose.setToolTipText("close");
        paymentClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                paymentCloseActionPerformed(evt);
            }
        });

        paymentIcon.setFont(new Font("Comic Sans MS", 1, 24)); // NOI18N
        paymentIcon.setForeground(new Color(255, 255, 255));
        paymentIcon.setText("Payment");
        paymentIcon.setIcon(new ImageIcon("image\\rupee1.png"));

        jPanel1.setBackground(new Color(255, 255, 255));

        jLabel1.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Tenant Id");

        jLabel2.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Water Bill");

        jLabel3.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Electricity Bill");

        jLabel4.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Room Charge");

        jLabel5.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Total Amount");

        jLabel6.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Number Of Months");

        jLabel7.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Payment Status");

        jLabel8.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Outstanding Amount");

        jButton1.setBackground(new Color(255, 204, 51));
        jButton1.setFont(new Font("Comic Sans MS", 1, 18)); // NOI18N
        jButton1.setForeground(new Color(255, 255, 255));
        jButton1.setText("ADD");
        jButton1.setIcon(new ImageIcon("image\\plus.png"));
        jButton1.setToolTipText("add Payment details");

        jLabel9.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Room Id");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jButton1)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addComponent(jLabel7, GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6, GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5, GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3, GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1, GroupLayout.Alignment.TRAILING)))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(26, 26, 26)
                .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        tenantId.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                tenantIdKeyPressed(evt);
            }
        });

        electricityUnit.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                electricityUnitKeyPressed(evt);
            }
        });

        GroupLayout paymentPanelLayout = new GroupLayout(paymentPanel);
        paymentPanel.setLayout(paymentPanelLayout);
        paymentPanelLayout.setHorizontalGroup(
            paymentPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addComponent(backToHome)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(paymentClose))
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addGroup(paymentPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(paymentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(paymentIcon))
                    .addGroup(paymentPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(paymentPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(tenantId, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(advance, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(noOfMonths, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(outstandingAmount, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(roomCharge, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(waterBill, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(totalAmount, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(electricityUnit, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(roomId))))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        paymentPanelLayout.setVerticalGroup(
            paymentPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addGroup(paymentPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(backToHome)
                    .addComponent(paymentClose, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(paymentIcon)
                .addGroup(paymentPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(paymentPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(tenantId, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(roomId, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(noOfMonths, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(advance, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomCharge, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(waterBill, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(electricityUnit, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(totalAmount, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(outstandingAmount, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
                    .addGroup(paymentPanelLayout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(paymentPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(paymentPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backToHomeMouseClicked(MouseEvent evt) {//GEN-FIRST:event_backToHomeMouseClicked
        try{
            stmt = conn.createStatement();
            String sql1 = "Select sum(vacantRoom)from house" ;
            String sql = "Select Distinct(tenantId),outstandingAmount from tenant";
            Home hom =new Home();
            rs = stmt.executeQuery(sql);
            int sum =0;
            while(rs.next()){
                sum += rs.getInt("outstandingAmount");
            }
            hom.outstandingAmount.setText(Integer.toString(sum));
            rs = stmt.executeQuery(sql1);
            while(rs.next()) {
                hom.setVisible(true);
                hom.pack();
                hom.setLocationRelativeTo(null);
                hom.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                hom.vacantRooms.setText(Integer.toString(rs.getInt("sum(vacantRoom)")));
            }
            this.dispose();
        } catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        }
    private void paymentCloseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_paymentCloseActionPerformed
     this.dispose();   
// TODO add your handling code here:
    }//GEN-LAST:event_paymentCloseActionPerformed

    private void tenantIdKeyPressed(KeyEvent evt) {//GEN-FIRST:event_tenantIdKeyPressed
        try {
            stmt = conn.createStatement();
            String sql = "Select t.regDate,t.advance,t.noOfRooms,u.roomcharge,u.unit,u.waterbill from tenant t , updat u  where t.tenantId = '"+tenantId.getText()+"'";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                String date = rs.getString("regDate");
                LocalDate prev = LocalDate.parse(date);
                LocalDate now = LocalDate.now();
                Period diff = Period.between(prev, now);
                String s = Integer.toString(diff.getMonths());
                noOfMonths.setText(s);
                advance.setText(rs.getString("advance"));
                int noR = Integer.parseInt(rs.getString("noOfRooms"));
                int room = Integer.parseInt(rs.getString("roomcharge"));
                int water = Integer.parseInt(rs.getString("waterbill"));
                roomCharge.setText(Integer.toString(diff.getMonths()*room*noR));
                waterBill.setText(Integer.toString(diff.getMonths()*water));
                String sql1 = "Update tenant Set waterbill = '"+waterBill.getText()+"',roomCharge = '"+roomCharge.getText()+"',noOfMonths = '"+s+"'where tenantId = '"+tenantId.getText()+"'";
                stmt.executeUpdate(sql1);
            }
            rs.close();
        }
        catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_tenantIdKeyPressed

    private void electricityUnitKeyPressed(KeyEvent evt) {//GEN-FIRST:event_electricityUnitKeyPressed
        try {
            stmt = conn.createStatement();
            String sql = "Select t.advance,t.waterBill,t.roomCharge, u.unit from tenant t, updat u where t.tenantId = '" +tenantId.getText()+"'";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                int room = Integer.parseInt(rs.getString("roomCharge"));
                int water = Integer.parseInt(rs.getString("waterBill"));
                int adv = Integer.parseInt(rs.getString("advance"));
                int unt = Integer.parseInt(rs.getString("unit"));
                int elec = Integer.parseInt(electricityUnit.getText()) * unt;
                int total = room + water + elec - adv ;
                totalAmount.setText(Integer.toString(total));
                String sql1 = "Update tenant Set electricityBill = '"+Integer.toString(elec)+"',totalAmount = '"+totalAmount.getText()+"'where tenantId = '"+tenantId.getText()+"'";
                stmt.executeUpdate(sql1);
            }
            rs.close();
        } catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_electricityUnitKeyPressed
    private void jButton1ActionPerformed(ActionEvent evt) {
        try {
              stmt = conn.createStatement();
                String sql = "Update tenant Set outstandingAmount = '"+Integer.parseInt(outstandingAmount.getText())+"' where tenantId = '"+tenantId.getText()+"'";
                stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(null,"Payment details added successfully");
        }
        catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField advance;
    private JLabel backToHome;
    private JTextField electricityUnit;
    private JButton jButton1;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JTextField noOfMonths;
    private JTextField outstandingAmount;
    private JButton paymentClose;
    private JLabel paymentIcon;
    private JPanel paymentPanel;
    private JTextField roomCharge;
    private JTextField roomId;
    private JTextField tenantId;
    private JTextField totalAmount;
    private JTextField waterBill;
    // End of variables declaration//GEN-END:variables
}
